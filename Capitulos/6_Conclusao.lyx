#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass extbook
\use_default_options true
\master ../Principal.lyx
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Conclusões
\end_layout

\begin_layout Standard
A criação de projetos para Internet das Coisas lida com vários desafios,
 na sua essência, relacionados à heterogeneidade dos dispositivos, protocolos
 e tecnologias de comunicação.
 As arquiteturas baseadas em middleware têm sido apresentadas como potenciais
 soluções para lidar com estes desafios, conforme observamos no capítulo
 de trabalhos relacionados.
 Porém, devido à grade variedade de domínios que estão inseridos os projetos
 de IoT, dificilmente um único padrão de middleware genérico irá resolver
 adequadamente os desafios de todos os domínios.
 
\end_layout

\begin_layout Standard
Desta forma, este trabalho propõe uma solução baseada em framework, com
 uma infraestrutura sólida de comunicação, abstração de dispositivos e gerenciam
ento de armazenamento, permitindo o desenvolvimento de soluções específicas
 para cada domínio.
\end_layout

\begin_layout Standard
A implementação do middleware permitiu avaliar que o mesmo pode ser adotado
 em projetos menos complexos, mostrando-se um alternativa eficaz para abstração
 de dispositivos e protocolos, simplificando o processo de desenvolvimento
 de soluções de IoT.
\end_layout

\begin_layout Standard
A disponibilização de bibliotecas que auxiliam na construção de aplicações
 embarcadas (firmware), permitem a simplificação do processo de desenvolvimento
 de dispositivos inteligentes, habilitados para Internet das Coisas.
 As ferramentas oferecidas neste trabalho, bem como o protocolo proposto,
 permitem a utilização de microcontroladores de baixo custo e plataformas
 de prototipação, como o Arduino, para criação destes dispositivos.
\end_layout

\begin_layout Standard
A disponibilização de bibliotecas para construção de aplicações cliente,
 que implementam o protocolo proposto, permitem a integração de aplicações
 usando linguagens de alto nível e simplificando o processo de desenvolvimento.
 
\end_layout

\begin_layout Standard
Os experimentos realizados na seção 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Integracao3D"

\end_inset

, permitiram avaliar a simplicidade da implementação do protocolo em outra
 linguagem de programação.
\end_layout

\begin_layout Standard
Por fim, a arquitetura proposta, seu design e implementação, conseguiram
 atender a todos objetivos estabelecidos no Capítulo 1, seção 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Objetivos"

\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
(pegar o resto do Design and Implementation)
\end_layout

\begin_layout Plain Layout
Falar do sentido de soluções para Iot em plataformasabertas.
\end_layout

\begin_layout Plain Layout
No final, falar que o Firmware é um diferencial dos outros projetos, bem
 como suporte a JavaScript, e sistemadas web embarcados.
\end_layout

\begin_layout Plain Layout
Falar que no experimento cenário 1 , podese obervar a facilidade de criação
 de projetos de Iot com o opendevice, devido as abstrações do processo de
 comunicação e integração entre software e hardware.
\end_layout

\begin_layout Plain Layout
Este cenário 2 permitiu avalizar a integração e extensibilidade do framework,
 com a inclusão de dispositivos que operam utilizando um protocolo próprio
\end_layout

\begin_layout Plain Layout
Falar da flexibilidade da arquitetura para substituição do protocolo, sendo
 de fato algo importante para definição e novos esperimentos.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Contribuições
\end_layout

\begin_layout Standard
As principais contribuições deste trabalho são:
\end_layout

\begin_layout Itemize
Um framework para construção de projetos de Internet das Coisas, com uma
 estrutura flexível e modular, baseado em padrões abertos.
\end_layout

\begin_layout Itemize
Um framework de conexões, que permite a integração com novos servidores
 e a inclusão de novos protocolos de comunicação com os dispositivos.
\end_layout

\begin_layout Itemize
Um middleware genérico, multiplataforma e extensível, que permite a abstração
 da comunicação com dispositivos heterogêneos, utilizando tecnologias de
 comunicação USB, Bluetooth, Ethernet, Wi-Fi.
\end_layout

\begin_layout Itemize
Uma interface Web para visualização e análise de dados que permite a construção
 de dashboards dinâmicos, utilizando um série de gráficos com suporte a
 visualização de dados históricos ou em tempo real.
\end_layout

\begin_layout Itemize
Biblioteca JavaScript para criação de projetos Web, que realiza a abstração
 dos dispositivos e permite comunicação em tempo real utilizando WebSocket.
\end_layout

\begin_layout Itemize
Um componente que permite a execução de aplicações em JavaScript no lado
 do servidor ou como aplicações Desktop.
\end_layout

\begin_layout Itemize
Biblioteca para integração com dispositivos móveis (Android).
\end_layout

\begin_layout Itemize
Compilação e distribuição da biblioteca BlueCove (Bluetooth), para plataforma
 ARM.
\end_layout

\begin_layout Itemize
Experimentos com a API 
\emph on
Device I/O
\emph default
, que validaram sua compatibilidade com a plataforma de desenvolvimento
 
\begin_inset Quotes eld
\end_inset

Beaglebone Black
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Experimentos que oferecem os fundamentos para criação de sistemas de simulação
 usando ambientes 3D.
\end_layout

\begin_layout Itemize
A proposta de um protocolo aberto, simples, extensível e de fácil implementação,
 que permite a comunicação com dispositivos com baixo pode ser processamento
 e memória.
\end_layout

\begin_layout Itemize
Um conjuntos de bibliotecas (firmware) em C++ para microcontroladores e
 plataformas abertas (ex.: Arduino), que implementam o protocolo proposto
 e simplificam o processo de desenvolvimento de aplicações embarcadas.
 
\end_layout

\begin_layout Section
Trabalhos Futuros
\end_layout

\begin_layout Itemize
Desenvolvimento de uma plataforma como serviço (PaaS), que ofereça uma infraestr
utura escalável baseada em 
\emph on
cloud computing
\emph default
, para desenvolvimento e implantação de projetos de IoT oferecidos como
 serviço (SaaS).
 Essa plataforma seria desenvolvida com base no OpenStack
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
https://www.openstack.org/
\end_layout

\end_inset

 e/ou OpenShift
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
www.openshift.com
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Criação de ferramentas para geração do firmware de forma automática usando
 linguagens declarativas ou visuais.
\end_layout

\begin_layout Itemize
Criação de ferramentas que permitam a atualização remota do firmware.
\end_layout

\begin_layout Itemize
Otimizar a estrutura de armazenamento de dados do Neo4J, utilizando um modelo
 baseado em arvore (GraphAware Neo4j TimeTree
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
http://graphaware.com/neo4j/2014/08/20/graphaware-neo4j-timetree.html
\end_layout

\end_inset

).
 Este modelo pode oferecer uma melhor performance para trabalhar com consulta
 e análise de eventos baseados no tempo.
\end_layout

\begin_layout Itemize
Realizar estudos de caso em outros cenários, como casa inteligente, cidade
 inteligente, redes de sensores sem fio, etc.
\end_layout

\begin_layout Itemize
Implementação de algoritmos inteligentes para detecção de eventos complexos,
 usando 
\emph on
Complex Event Processing.
\end_layout

\end_body
\end_document
